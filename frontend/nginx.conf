server {
  # 監聽 80 port
  listen 80;

  # 新增區塊：處理所有 API 請求
  # 這個 location 區塊會攔截所有對 /api/... 的請求
  # 並將它們反向代理到後端服務
  location /api/ {
    # Kubernetes 會透過其內部的 DNS 服務，將 'assetx-backend'
    # 解析到後端服務 (Service) 的 CLUSTER-IP。
    proxy_pass http://hance-backend:3001;

    # 這些是設定反向代理時建議加入的標頭，
    # 以確保後端服務能正確獲取原始請求的資訊。
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;

    # 添加額外的 headers
    proxy_set_header Origin $http_origin;
    proxy_set_header Access-Control-Allow-Origin *;
    
    # 支援 gzip
    proxy_set_header Accept-Encoding "gzip, deflate, br";
    
    # 確保正確傳遞 auth token
    proxy_set_header Authorization $http_authorization;
    proxy_pass_header Authorization;
  }

  # 處理靜態資源
  location ~* \.(png|jpg|jpeg|gif|ico|svg|webp)$ {
    root /usr/share/nginx/html;
    expires 30d;
    add_header Cache-Control "public, no-transform";
    add_header Vary Accept;
    
    # 設定正確的 content-type
    types {
      image/png     png PNG;
      image/jpeg    jpg jpeg;
      image/gif     gif;
      image/x-icon  ico;
      image/svg+xml svg;
      image/webp    webp;
    }
  }

  # 原有的區塊：處理所有非 API 的請求 (也就是前端應用本身)
  location / {
    # 設定根目錄為 Nginx 映像檔的預設網站目錄
    root /usr/share/nginx/html;
    # 設定預設的索引文件
    index index.html index.htm;
    # 關鍵設定：讓 React Router 接手處理所有前端路由
    try_files $uri $uri/ /index.html;
  }
} 